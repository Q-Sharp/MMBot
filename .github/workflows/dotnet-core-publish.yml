name: Compile

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 8.0.100
    
    - name: Install workload
      run: dotnet workload install wasm-tools

    - name: Build
      run: dotnet build MMBot.sln -c Release

    - name: Test
      run: dotnet test MMBot.sln --no-restore --verbosity normal

    - name: .NET Publish
      run: dotnet publish ./MMBot.Discord/MMBot.Discord.csproj -c Release -r linux-x64 --framework net8.0 /p:DebugType=None /p:DebugSymbols=false -o ./published

    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: './published/appsettings.json'
      env:
        DetailedErrors: false
        Discord.DevToken: ${{ secrets.DISCORD_DEV_TOKEN }}
        Discord.Token: ${{ secrets.DISCORD_TOKEN }}

    - name: Create ZIP Archive
      run: |
        cd ./published
        zip -r MMBot_Discord.zip publish/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: "Release ${{ github.sha }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: MMBot.Discord/bin/Release/net8.0/linux-x64/MMBot_Discord.zip
        asset_name: MMBot_Discord.zip
        asset_content_type: application/zi

