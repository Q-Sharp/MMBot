@inject ICRUDViewModel<ClanModel, Clan> ClanVM
@inject StateContainer StateContainer

@inherits ComponentBase

<MudSelect T="int?" Label="Clan" @bind-Value="SelectedId" @bind-Text="SelectedClan" @bind:event="oninput" FullWidth="true" Strict="true" Variant="Variant.Outlined" Format="F2"
           @onchange="UpdateId">
    <MudSelectItem T="int?" value="@((int?)null)">None</MudSelectItem>
    @foreach (var clan in ClanVM.Entities)
    {
        <MudSelectItem T="int?" value="@clan.Id">@clan.Name</MudSelectItem>
    }
</MudSelect>

@code
{
    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
        ClanVM.SelectedEntity = ClanVM?.Entities.FirstOrDefault(x => x.Id == SelectedId);
        StateHasChanged();
    }

    private async Task UpdateId(object changed)
    {
        await SelectedIdChanged.InvokeAsync((int?)changed);
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    [Parameter]
    public int? SelectedId { get; set; }

    [Parameter]
    public string SelectedClan { get; set; }

    [Parameter]
    public EventCallback<int?> SelectedIdChanged { get; set; }
}