@page "/clan"

@using MMBot.Data.Services.Interfaces
@using System.Security.Principal
@using MMBot.Blazor.Services
@inject IDatabaseService DatabaseService
@inject IAccountService AccountService
@inject AuthenticationStateProvider  AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime js

<h1>Clans</h1>


@if (_clans == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button @onclick="(() => CreateClan())">Create</button>

    <table class="table">
        <thead>
            <tr>
                <th>Tag</th>
                <th>Name</th>
                <th>SortOrder</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var clan in _clans)
            {
                <tr>
                    <td>@clan.Tag</td>
                    <td>@clan.Name</td>
                    <td>@clan.SortOrder</td>
                    <!--<td><a href="/EditAccount/@account.id" class="btn btn-info">Edit</a></td>-->
                    <td><a @onclick="(() => DeleteClan(clan.Id))" class="btn btn-danger">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>

    <div>

    </div>
}

@code {
    private ulong GuildId { get; set; }
    private MMBot.Data.Entities.Clan[] _clans;
    private IIdentity _loggedUser;

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.NavigateTo("Account/GetGuildIds");

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _loggedUser = authState.User.Identity;

        var user = AccountService.LoggedUser;

        if(user?.CurrentGuildIdUlong.HasValue ?? false)
            _clans = (await DatabaseService.LoadClansAsync(user.CurrentGuildIdUlong.Value)).ToArray();
    }

    public async Task DeleteClan(int? id)
    {
        bool confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete this clan?");
        if (confirm && id.HasValue)
        {
            try
            {
                DatabaseService.DeleteClan(id.Value);
            }
            finally
            {
                NavigationManager.NavigateTo("/");
            }
        }
    }

    public void CreateClan()
    {
        try
        {
            DatabaseService.CreateClan(1);
        }
        finally
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
